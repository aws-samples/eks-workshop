<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deploy the Kubernetes Dashboard on Amazon EKS Workshop</title>
    <link>/dashboard/</link>
    <description>Recent content in Deploy the Kubernetes Dashboard on Amazon EKS Workshop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Aug 2018 08:30:11 -0700</lastBuildDate>
    
	<atom:link href="/dashboard/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Deploy the Official Kubernetes Dashboard</title>
      <link>/dashboard/dashboard/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/dashboard/dashboard/</guid>
      <description>The official Kubernetes dashboard is not deployed by default, but there are instructions in the official documentation
We can deploy the dashboard with the following command:
kubectl create -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml  Since this is deployed to our private cluster, we need to access it via a proxy. Kube-proxy is available to proxy our requests to the dashboard service. In your workspace, run the following command:
kubectl proxy --port=8080 --address=&#39;0.0.0.0&#39; --disable-filter=true &amp;amp;  This will start the proxy, listen on port 8080, listen on all interfaces, and will disable the filtering of non-localhost requests.</description>
    </item>
    
    <item>
      <title>Access the Dashboard</title>
      <link>/dashboard/connect/</link>
      <pubDate>Tue, 07 Aug 2018 08:30:11 -0700</pubDate>
      
      <guid>/dashboard/connect/</guid>
      <description>Now we can access the Kubernetes Dashboard
 In your Cloud9 environment, click Preview / Preview Running Application Scroll to the end of the URL and append:  /api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/  Open a New Terminal Tab and enter
aws-iam-authenticator token -i eksworkshop-eksctl --token-only  Copy the output of this command and then click the radio button next to Token then in the text field below pate the output from the last command.</description>
    </item>
    
  </channel>
</rss>